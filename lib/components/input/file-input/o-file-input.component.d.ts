import { ElementRef, EventEmitter, Injector, OnInit } from '@angular/core';
import { FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';
import { IFileService } from '../../../interfaces/file-service.interface';
import { OFormComponent } from '../../form/o-form.component';
import { OFormDataComponent } from '../../o-form-data-component.class';
import { OFileItem } from './o-file-item.class';
import { OFileUploader } from './o-file-uploader.class';
export declare const DEFAULT_INPUTS_O_FILE_INPUT: string[];
export declare const DEFAULT_OUTPUTS_O_FILE_INPUT: string[];
export declare class OFileInputComponent extends OFormDataComponent implements OnInit {
    uploader: OFileUploader;
    fileService: IFileService;
    inputFile: ElementRef;
    autoBinding: boolean;
    autoRegistering: boolean;
    showInfo: boolean;
    multiple: boolean;
    splitUpload: boolean;
    acceptFileType: string;
    maxFileSize: number;
    maxFiles: number;
    onBeforeUpload: EventEmitter<any>;
    onBeforeUploadFile: EventEmitter<any>;
    onProgress: EventEmitter<any>;
    onProgressFile: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    onCancelFile: EventEmitter<any>;
    onUpload: EventEmitter<any>;
    onUploadFile: EventEmitter<any>;
    onComplete: EventEmitter<any>;
    onCompleteFile: EventEmitter<any>;
    onError: EventEmitter<any>;
    onErrorFile: EventEmitter<any>;
    protected service: string;
    protected entity: string;
    protected serviceType: string;
    constructor(form: OFormComponent, elRef: ElementRef, injector: Injector);
    ngOnInit(): void;
    initialize(): void;
    configureService(): void;
    resolveValidators(): ValidatorFn[];
    fileSelected(event: Event): void;
    onClickClearValue(e: Event): void;
    clearValue(): void;
    onClickUpload(e: Event): void;
    upload(): void;
    readonly files: OFileItem[];
    additionalData: any;
    innerOnChange(event: any): void;
    protected filetypeValidator(control: FormControl): ValidationErrors;
    protected maxFileSizeValidator(control: FormControl): ValidationErrors;
    protected maxFilesValidator(control: FormControl): ValidationErrors;
}
