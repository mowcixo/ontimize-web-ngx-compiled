import { ElementRef, EventEmitter, Injector } from '@angular/core';
import { BehaviorSubject, Subscription } from 'rxjs';
import { DialogService } from '../../services/dialog.service';
import { OntimizeService } from '../../services/ontimize/ontimize.service';
import { FormValueOptions } from '../../types/form-value-options.type';
import { OFormComponent } from '../form/o-form.component';
import { OFormDataComponent } from '../o-form-data-component.class';
export declare const DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT: string[];
export declare const DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT: string[];
export declare class OFormServiceComponent extends OFormDataComponent {
    protected staticData: Array<any>;
    protected entity: string;
    protected service: string;
    protected columns: string;
    protected valueColumn: string;
    protected valueColumnType: string;
    protected parentKeys: string;
    protected visibleColumns: string;
    protected descriptionColumns: string;
    protected separator: string;
    protected queryOnInit: boolean;
    protected queryOnBind: boolean;
    protected queryOnEvent: any;
    protected queryMethod: string;
    protected serviceType: string;
    queryWithNullParentKeys: boolean;
    setValueOnValueChange: string;
    queryFallbackFunction: (error: any) => void;
    onSetValueOnValueChange: EventEmitter<object>;
    onDataLoaded: EventEmitter<object>;
    protected dataArray: any[];
    protected colArray: string[];
    protected visibleColArray: string[];
    protected descriptionColArray: string[];
    protected dataService: OntimizeService;
    loaderSubscription: Subscription;
    loading: boolean;
    protected querySuscription: Subscription;
    protected cacheQueried: boolean;
    protected _pKeysEquiv: {};
    protected _setValueOnValueChangeEquiv: {};
    protected _formDataSubcribe: any;
    protected _currentIndex: any;
    protected dialogService: DialogService;
    protected queryOnEventSubscription: Subscription;
    delayLoad: number;
    loadingSubject: BehaviorSubject<boolean>;
    constructor(form: OFormComponent, elRef: ElementRef, injector: Injector);
    initialize(): void;
    destroy(): void;
    protected emitOnValueChange(type: any, newValue: any, oldValue: any): void;
    configureService(): void;
    getAttributesValuesToQuery(columns?: Array<any>): any[];
    queryData(filter?: any): void;
    getDataArray(): any[];
    setDataArray(data: any): void;
    syncDataIndex(queryIfNotFound?: boolean): void;
    protected parseByValueColumnType(val: any): any;
    setValue(val: any, options?: FormValueOptions): void;
    setData(val: any): void;
    getSelectedRecord(): any;
    load(): any;
    onFormControlChange(value: any): void;
}
