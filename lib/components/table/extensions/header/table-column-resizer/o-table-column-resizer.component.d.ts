import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { OColumn } from '../../../column/o-column.class';
import { OTableComponent } from '../../../o-table.component';
export declare const DEFAULT_INPUTS_O_TABLE_COLUMN_RESIZER: string[];
export declare const DEFAULT_OUTPUTS_O_TABLE_COLUMN_RESIZER: any[];
export declare class OTableColumnResizerComponent implements OnInit, OnDestroy {
    table: OTableComponent;
    protected elRef: ElementRef;
    protected ngZone: NgZone;
    protected renderer: Renderer2;
    column: OColumn;
    disabled: boolean;
    protected startWidth: any;
    protected minWidth: any;
    protected maxWidth: any;
    protected startX: any;
    protected headerEl: any;
    protected nextOColumns: OColumn[];
    protected dragListeners: Array<() => void>;
    protected isResizing: boolean;
    protected blockedMinCols: any[];
    protected blockedMaxCols: any[];
    protected columnsStartWidth: {};
    constructor(table: OTableComponent, elRef: ElementRef, ngZone: NgZone, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onClick(event: MouseEvent): void;
    readonly isDisabled: boolean;
    onMousedown(e: MouseEvent): void;
    onMouseup(): void;
    protected stopDragging(): void;
    startResize(startEvent: MouseEvent): void;
    protected resizeEvent(event: MouseEvent): void;
    protected getHeaderEL(): Node;
    protected getFollowingOColumns(): OColumn[];
    protected updateBlockedCols(): void;
    protected calculateNewColumnsWidth(movementX: number, newColumnWidth: number): void;
    protected calculateUsingNextColumnsRestrictions(movementX: number, newColumnWidth: number): void;
    protected calculateUsingOwnColumnRestriction(movementX: number, newColumnWidth: number): void;
    protected initializeWidthData(): void;
}
