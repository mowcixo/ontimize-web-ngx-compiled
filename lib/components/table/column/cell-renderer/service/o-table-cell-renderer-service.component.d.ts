import { AfterViewInit, Injector, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { ITranslatePipeArgument, OTranslatePipe } from '../../../../../pipes/o-translate.pipe';
import { DialogService } from '../../../../../services/dialog.service';
import { Expression } from '../../../../../types/expression.type';
import { OBaseTableCellRenderer } from '../o-base-table-cell-renderer.class';
export declare const DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE: string[];
export declare class OTableCellRendererServiceComponent extends OBaseTableCellRenderer implements OnInit, AfterViewInit, OnDestroy {
    protected injector: Injector;
    static DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE: string[];
    templateref: TemplateRef<any>;
    rowData: any;
    cellValues: any[];
    renderValue: any;
    responseMap: {};
    protected entity: string;
    protected service: string;
    protected columns: string;
    protected translate: boolean;
    protected valueColumn: string;
    protected parentKeys: string;
    protected queryMethod: string;
    protected serviceType: string;
    protected colArray: string[];
    protected dataService: any;
    protected _pKeysEquiv: {};
    protected querySubscription: Subscription;
    protected dialogService: DialogService;
    translateArgsFn: (rowData: any) => any[];
    protected componentPipe: OTranslatePipe;
    protected pipeArguments: ITranslatePipeArgument;
    protected editorSuscription: Subscription;
    constructor(injector: Injector);
    initialize(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getDescriptionValue(cellvalue: any, rowValue: any): string;
    queryData(cellvalue: any, parentItem?: any): void;
    configureService(): void;
    getCellData(cellvalue: any, rowvalue?: any): string;
    getFilterExpression(quickFilter: string): Expression;
    setComponentPipe(): void;
    responseValue(cellvalue: any, rowvalue?: any): string;
}
