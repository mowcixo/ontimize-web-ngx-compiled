import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';
import { MediaObserver } from '@angular/flex-layout';
import { MatSidenav } from '@angular/material';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { AppMenuService } from '../../services/app-menu.service';
import { OUserInfoService, UserInfo } from '../../services/o-user-info.service';
import { MenuRootItem } from '../../types/menu-root-item.type';
import { OAppLayoutMode, OSidenavMode } from '../../util/codes';
export declare const DEFAULT_INPUTS_O_APP_SIDENAV: string[];
export declare const DEFAULT_OUTPUTS_O_APP_SIDENAV: string[];
export declare class OAppSidenavComponent implements OnInit, OnDestroy, AfterViewInit {
    protected injector: Injector;
    protected router: Router;
    protected elRef: ElementRef;
    protected cd: ChangeDetectorRef;
    protected media: MediaObserver;
    sidenav: MatSidenav;
    protected routerSubscription: Subscription;
    appMenuService: AppMenuService;
    protected _menuRootArray: MenuRootItem[];
    protected _layoutMode: OAppLayoutMode;
    protected _sidenavMode: OSidenavMode;
    protected opened: boolean;
    _showUserInfo: boolean;
    _showToggleButton: boolean;
    openedSidenavImg: string;
    closedSidenavImg: string;
    onSidenavOpenedChange: EventEmitter<boolean>;
    onSidenavOpenedStart: EventEmitter<void>;
    onSidenavClosedStart: EventEmitter<void>;
    onSidenavToggle: EventEmitter<boolean>;
    afterSidenavToggle: EventEmitter<boolean>;
    protected oUserInfoService: OUserInfoService;
    protected userInfoSubscription: Subscription;
    protected userInfo: UserInfo;
    protected mediaWatch: Subscription;
    protected manuallyClosed: boolean;
    constructor(injector: Injector, router: Router, elRef: ElementRef, cd: ChangeDetectorRef, media: MediaObserver);
    onResize(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    layoutMode: OAppLayoutMode;
    sidenavMode: OSidenavMode;
    protected refreshMenuRoots(): void;
    ngOnDestroy(): void;
    isScreenSmall(): boolean;
    isMobileMode(): boolean;
    isDesktopMode(): boolean;
    isSidenavOpened(): boolean;
    menuRootArray: MenuRootItem[];
    toggleSidenav(): void;
    showUserInfo: boolean;
    showToggleButton: boolean;
    onMenuItemClick(): void;
    sidenavClosedStart(): void;
    sidenavOpenedStart(): void;
    sidenavOpenedChange(): void;
}
