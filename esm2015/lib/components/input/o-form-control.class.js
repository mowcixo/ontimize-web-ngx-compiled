import { FormControl } from '@angular/forms';
export class OFormControl extends FormControl {
    constructor(formState = null, validatorOrOpts, asyncValidator) {
        super(formState, validatorOrOpts, asyncValidator);
    }
    markAsTouched(opts = {}) {
        super.markAsTouched(opts);
        if (!this.fControlChildren) {
            return;
        }
        this.fControlChildren.forEach(x => {
            if (x instanceof FormControl) {
                x.markAsTouched(opts);
            }
            else if (x.getFormControl()) {
                x.getFormControl().markAsTouched();
            }
        });
    }
    markAsDirty(opts = {}) {
        super.markAsDirty(opts);
        if (!this.fControlChildren) {
            return;
        }
        this.fControlChildren.forEach(x => {
            if (x instanceof FormControl) {
                x.markAsDirty(opts);
            }
            else if (x.getFormControl()) {
                x.getFormControl().markAsDirty();
            }
        });
    }
    markAsPristine(opts = {}) {
        super.markAsPristine(opts);
        if (!this.fControlChildren) {
            return;
        }
        this.fControlChildren.forEach(x => {
            if (x instanceof FormControl) {
                x.markAsPristine(opts);
            }
            else if (x.getFormControl()) {
                x.getFormControl().markAsPristine();
            }
        });
    }
    getValue() {
        return this.value;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1mb3JtLWNvbnRyb2wuY2xhc3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vbnRpbWl6ZS13ZWItbmd4LyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaW5wdXQvby1mb3JtLWNvbnRyb2wuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUE0QyxXQUFXLEVBQWUsTUFBTSxnQkFBZ0IsQ0FBQztBQUlwRyxNQUFNLE9BQU8sWUFBYSxTQUFRLFdBQVc7SUFHM0MsWUFDRSxZQUFpQixJQUFJLEVBQ3JCLGVBQTZFLEVBQzdFLGNBQTZEO1FBRTdELEtBQUssQ0FBQyxTQUFTLEVBQUUsZUFBZSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxhQUFhLENBQUMsT0FBK0IsRUFBRTtRQUM3QyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDMUIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNoQyxJQUFJLENBQUMsWUFBWSxXQUFXLEVBQUU7Z0JBQzVCLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDdkI7aUJBQU0sSUFBSSxDQUFDLENBQUMsY0FBYyxFQUFFLEVBQUU7Z0JBQzdCLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQzthQUNwQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUErQixFQUFFO1FBQzNDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxQixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxZQUFZLFdBQVcsRUFBRTtnQkFDNUIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNyQjtpQkFBTSxJQUFJLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRTtnQkFDN0IsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO2FBQ2xDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsY0FBYyxDQUFDLE9BQStCLEVBQUU7UUFDOUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQzFCLE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFlBQVksV0FBVyxFQUFFO2dCQUM1QixDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3hCO2lCQUFNLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRSxFQUFFO2dCQUM3QixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUMsY0FBYyxFQUFFLENBQUM7YUFDckM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Q0FJRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbE9wdGlvbnMsIEFzeW5jVmFsaWRhdG9yRm4sIEZvcm1Db250cm9sLCBWYWxpZGF0b3JGbiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgT0Zvcm1EYXRhQ29tcG9uZW50IH0gZnJvbSAnLi4vby1mb3JtLWRhdGEtY29tcG9uZW50LmNsYXNzJztcblxuZXhwb3J0IGNsYXNzIE9Gb3JtQ29udHJvbCBleHRlbmRzIEZvcm1Db250cm9sIHtcbiAgcHVibGljIGZDb250cm9sQ2hpbGRyZW46IChGb3JtQ29udHJvbCB8IE9Gb3JtRGF0YUNvbXBvbmVudClbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBmb3JtU3RhdGU6IGFueSA9IG51bGwsXG4gICAgdmFsaWRhdG9yT3JPcHRzPzogVmFsaWRhdG9yRm4gfCBWYWxpZGF0b3JGbltdIHwgQWJzdHJhY3RDb250cm9sT3B0aW9ucyB8IG51bGwsXG4gICAgYXN5bmNWYWxpZGF0b3I/OiBBc3luY1ZhbGlkYXRvckZuIHwgQXN5bmNWYWxpZGF0b3JGbltdIHwgbnVsbFxuICApIHtcbiAgICBzdXBlcihmb3JtU3RhdGUsIHZhbGlkYXRvck9yT3B0cywgYXN5bmNWYWxpZGF0b3IpO1xuICB9XG5cbiAgbWFya0FzVG91Y2hlZChvcHRzOiB7IG9ubHlTZWxmPzogYm9vbGVhbiB9ID0ge30pOiB2b2lkIHtcbiAgICBzdXBlci5tYXJrQXNUb3VjaGVkKG9wdHMpO1xuICAgIGlmICghdGhpcy5mQ29udHJvbENoaWxkcmVuKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZkNvbnRyb2xDaGlsZHJlbi5mb3JFYWNoKHggPT4ge1xuICAgICAgaWYgKHggaW5zdGFuY2VvZiBGb3JtQ29udHJvbCkge1xuICAgICAgICB4Lm1hcmtBc1RvdWNoZWQob3B0cyk7XG4gICAgICB9IGVsc2UgaWYgKHguZ2V0Rm9ybUNvbnRyb2woKSkge1xuICAgICAgICB4LmdldEZvcm1Db250cm9sKCkubWFya0FzVG91Y2hlZCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgbWFya0FzRGlydHkob3B0czogeyBvbmx5U2VsZj86IGJvb2xlYW4gfSA9IHt9KTogdm9pZCB7XG4gICAgc3VwZXIubWFya0FzRGlydHkob3B0cyk7XG4gICAgaWYgKCF0aGlzLmZDb250cm9sQ2hpbGRyZW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5mQ29udHJvbENoaWxkcmVuLmZvckVhY2goeCA9PiB7XG4gICAgICBpZiAoeCBpbnN0YW5jZW9mIEZvcm1Db250cm9sKSB7XG4gICAgICAgIHgubWFya0FzRGlydHkob3B0cyk7XG4gICAgICB9IGVsc2UgaWYgKHguZ2V0Rm9ybUNvbnRyb2woKSkge1xuICAgICAgICB4LmdldEZvcm1Db250cm9sKCkubWFya0FzRGlydHkoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG1hcmtBc1ByaXN0aW5lKG9wdHM6IHsgb25seVNlbGY/OiBib29sZWFuIH0gPSB7fSk6IHZvaWQge1xuICAgIHN1cGVyLm1hcmtBc1ByaXN0aW5lKG9wdHMpO1xuICAgIGlmICghdGhpcy5mQ29udHJvbENoaWxkcmVuKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZkNvbnRyb2xDaGlsZHJlbi5mb3JFYWNoKHggPT4ge1xuICAgICAgaWYgKHggaW5zdGFuY2VvZiBGb3JtQ29udHJvbCkge1xuICAgICAgICB4Lm1hcmtBc1ByaXN0aW5lKG9wdHMpO1xuICAgICAgfSBlbHNlIGlmICh4LmdldEZvcm1Db250cm9sKCkpIHtcbiAgICAgICAgeC5nZXRGb3JtQ29udHJvbCgpLm1hcmtBc1ByaXN0aW5lKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgfVxuXG4gIC8qKnNldFZhbHVlKHZhbHVlOiBhbnksIG9wdGlvbnM6IHsgfSA9PiBOb3Qgb3ZlcnJpZGUgdGhpcyBtZXRob2QgYmVjYXVzZSB0aGVyZSBpcyBhIGNhc2Ugd2hlcmUgdGhlIGNoaWxkcmVuIGhhdmUgYSBkaWZmZXJlbnQgdmFsdWUgdGhhbiB0aGUgbWFpbiBvbmVcbiAgICovXG59XG4iXX0=