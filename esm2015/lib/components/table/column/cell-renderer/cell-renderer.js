import { OTableCellRendererActionComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION, DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION } from './action/o-table-cell-renderer-action.component';
import { OTableCellRendererBooleanComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_BOOLEAN } from './boolean/o-table-cell-renderer-boolean.component';
import { OTableCellRendererCurrencyComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY } from './currency/o-table-cell-renderer-currency.component';
import { OTableCellRendererDateComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_DATE } from './date/o-table-cell-renderer-date.component';
import { OTableCellRendererImageComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_IMAGE } from './image/o-table-cell-renderer-image.component';
import { OTableCellRendererIntegerComponent } from './integer/o-table-cell-renderer-integer.component';
import { OTableCellRendererPercentageComponent } from './percentage/o-table-cell-renderer-percentage.component';
import { OTableCellRendererRealComponent } from './real/o-table-cell-renderer-real.component';
import { OTableCellRendererServiceComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE } from './service/o-table-cell-renderer-service.component';
import { OTableCellRendererTimeComponent } from './time/o-table-cell-renderer-time.component';
import { OTableCellRendererTranslateComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE } from './translate/o-table-cell-renderer-translate.component';
export const O_TABLE_CELL_RENDERERS = [
    OTableCellRendererActionComponent,
    OTableCellRendererDateComponent,
    OTableCellRendererBooleanComponent,
    OTableCellRendererImageComponent,
    OTableCellRendererIntegerComponent,
    OTableCellRendererRealComponent,
    OTableCellRendererCurrencyComponent,
    OTableCellRendererPercentageComponent,
    OTableCellRendererServiceComponent,
    OTableCellRendererTranslateComponent,
    OTableCellRendererTimeComponent
];
export const O_TABLE_CELL_RENDERERS_INPUTS = [
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_BOOLEAN,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_DATE,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_IMAGE,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE,
    ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE
];
export const O_TABLE_CELL_RENDERERS_OUTPUTS = [
    ...DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION
];
export const renderersMapping = {
    action: OTableCellRendererActionComponent,
    boolean: OTableCellRendererBooleanComponent,
    currency: OTableCellRendererCurrencyComponent,
    date: OTableCellRendererDateComponent,
    image: OTableCellRendererImageComponent,
    integer: OTableCellRendererIntegerComponent,
    percentage: OTableCellRendererPercentageComponent,
    real: OTableCellRendererRealComponent,
    service: OTableCellRendererServiceComponent,
    translate: OTableCellRendererTranslateComponent,
    time: OTableCellRendererTimeComponent
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1yZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9jb2x1bW4vY2VsbC1yZW5kZXJlci9jZWxsLXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSwyQ0FBMkMsRUFBRSw0Q0FBNEMsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQy9MLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSw0Q0FBNEMsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JKLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSw2Q0FBNkMsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ3pKLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSx5Q0FBeUMsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3pJLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSwwQ0FBMEMsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQzdJLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQ2hILE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzlGLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSw0Q0FBNEMsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JKLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzlGLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSw4Q0FBOEMsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBRTdKLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHO0lBQ3BDLGlDQUFpQztJQUNqQywrQkFBK0I7SUFDL0Isa0NBQWtDO0lBQ2xDLGdDQUFnQztJQUNoQyxrQ0FBa0M7SUFDbEMsK0JBQStCO0lBQy9CLG1DQUFtQztJQUNuQyxxQ0FBcUM7SUFDckMsa0NBQWtDO0lBQ2xDLG9DQUFvQztJQUNwQywrQkFBK0I7Q0FDaEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHO0lBQzNDLEdBQUcsNENBQTRDO0lBQy9DLEdBQUcsNkNBQTZDO0lBQ2hELEdBQUcseUNBQXlDO0lBQzVDLEdBQUcsMENBQTBDO0lBQzdDLEdBQUcsMkNBQTJDO0lBQzlDLEdBQUcsNENBQTRDO0lBQy9DLEdBQUcsOENBQThDO0NBQ2xELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRztJQUM1QyxHQUFHLDRDQUE0QztDQUNoRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUc7SUFDOUIsTUFBTSxFQUFFLGlDQUFpQztJQUN6QyxPQUFPLEVBQUUsa0NBQWtDO0lBQzNDLFFBQVEsRUFBRSxtQ0FBbUM7SUFDN0MsSUFBSSxFQUFFLCtCQUErQjtJQUNyQyxLQUFLLEVBQUUsZ0NBQWdDO0lBQ3ZDLE9BQU8sRUFBRSxrQ0FBa0M7SUFDM0MsVUFBVSxFQUFFLHFDQUFxQztJQUNqRCxJQUFJLEVBQUUsK0JBQStCO0lBQ3JDLE9BQU8sRUFBRSxrQ0FBa0M7SUFDM0MsU0FBUyxFQUFFLG9DQUFvQztJQUMvQyxJQUFJLEVBQUUsK0JBQStCO0NBQ3RDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPVGFibGVDZWxsUmVuZGVyZXJBY3Rpb25Db21wb25lbnQsIERFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9BQ1RJT04sIERFRkFVTFRfT1VUUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQUNUSU9OIH0gZnJvbSAnLi9hY3Rpb24vby10YWJsZS1jZWxsLXJlbmRlcmVyLWFjdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyQm9vbGVhbkNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0JPT0xFQU4gfSBmcm9tICcuL2Jvb2xlYW4vby10YWJsZS1jZWxsLXJlbmRlcmVyLWJvb2xlYW4uY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlckN1cnJlbmN5Q29tcG9uZW50LCBERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQ1VSUkVOQ1kgfSBmcm9tICcuL2N1cnJlbmN5L28tdGFibGUtY2VsbC1yZW5kZXJlci1jdXJyZW5jeS5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyRGF0ZUNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0RBVEUgfSBmcm9tICcuL2RhdGUvby10YWJsZS1jZWxsLXJlbmRlcmVyLWRhdGUuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlckltYWdlQ29tcG9uZW50LCBERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfSU1BR0UgfSBmcm9tICcuL2ltYWdlL28tdGFibGUtY2VsbC1yZW5kZXJlci1pbWFnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVySW50ZWdlckNvbXBvbmVudCB9IGZyb20gJy4vaW50ZWdlci9vLXRhYmxlLWNlbGwtcmVuZGVyZXItaW50ZWdlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyUGVyY2VudGFnZUNvbXBvbmVudCB9IGZyb20gJy4vcGVyY2VudGFnZS9vLXRhYmxlLWNlbGwtcmVuZGVyZXItcGVyY2VudGFnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyUmVhbENvbXBvbmVudCB9IGZyb20gJy4vcmVhbC9vLXRhYmxlLWNlbGwtcmVuZGVyZXItcmVhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyU2VydmljZUNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX1NFUlZJQ0UgfSBmcm9tICcuL3NlcnZpY2Uvby10YWJsZS1jZWxsLXJlbmRlcmVyLXNlcnZpY2UuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlclRpbWVDb21wb25lbnQgfSBmcm9tICcuL3RpbWUvby10YWJsZS1jZWxsLXJlbmRlcmVyLXRpbWUuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlclRyYW5zbGF0ZUNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX1RSQU5TTEFURSB9IGZyb20gJy4vdHJhbnNsYXRlL28tdGFibGUtY2VsbC1yZW5kZXJlci10cmFuc2xhdGUuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IE9fVEFCTEVfQ0VMTF9SRU5ERVJFUlMgPSBbXG4gIE9UYWJsZUNlbGxSZW5kZXJlckFjdGlvbkNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVyRGF0ZUNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVyQm9vbGVhbkNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVySW1hZ2VDb21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlckludGVnZXJDb21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlclJlYWxDb21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlckN1cnJlbmN5Q29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJQZXJjZW50YWdlQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJTZXJ2aWNlQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJUcmFuc2xhdGVDb21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlclRpbWVDb21wb25lbnRcbl07XG5cbmV4cG9ydCBjb25zdCBPX1RBQkxFX0NFTExfUkVOREVSRVJTX0lOUFVUUyA9IFtcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0JPT0xFQU4sXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9DVVJSRU5DWSwgLy8gaW5jbHVkZXMgSW50ZWdlciBhbmQgUmVhbFxuICAuLi5ERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfREFURSxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0lNQUdFLFxuICAuLi5ERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQUNUSU9OLFxuICAuLi5ERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfU0VSVklDRSxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX1RSQU5TTEFURVxuXTtcblxuZXhwb3J0IGNvbnN0IE9fVEFCTEVfQ0VMTF9SRU5ERVJFUlNfT1VUUFVUUyA9IFtcbiAgLi4uREVGQVVMVF9PVVRQVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9BQ1RJT05cbl07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJlcnNNYXBwaW5nID0ge1xuICBhY3Rpb246IE9UYWJsZUNlbGxSZW5kZXJlckFjdGlvbkNvbXBvbmVudCxcbiAgYm9vbGVhbjogT1RhYmxlQ2VsbFJlbmRlcmVyQm9vbGVhbkNvbXBvbmVudCxcbiAgY3VycmVuY3k6IE9UYWJsZUNlbGxSZW5kZXJlckN1cnJlbmN5Q29tcG9uZW50LFxuICBkYXRlOiBPVGFibGVDZWxsUmVuZGVyZXJEYXRlQ29tcG9uZW50LFxuICBpbWFnZTogT1RhYmxlQ2VsbFJlbmRlcmVySW1hZ2VDb21wb25lbnQsXG4gIGludGVnZXI6IE9UYWJsZUNlbGxSZW5kZXJlckludGVnZXJDb21wb25lbnQsXG4gIHBlcmNlbnRhZ2U6IE9UYWJsZUNlbGxSZW5kZXJlclBlcmNlbnRhZ2VDb21wb25lbnQsXG4gIHJlYWw6IE9UYWJsZUNlbGxSZW5kZXJlclJlYWxDb21wb25lbnQsXG4gIHNlcnZpY2U6IE9UYWJsZUNlbGxSZW5kZXJlclNlcnZpY2VDb21wb25lbnQsXG4gIHRyYW5zbGF0ZTogT1RhYmxlQ2VsbFJlbmRlcmVyVHJhbnNsYXRlQ29tcG9uZW50LFxuICB0aW1lOiBPVGFibGVDZWxsUmVuZGVyZXJUaW1lQ29tcG9uZW50XG59O1xuIl19