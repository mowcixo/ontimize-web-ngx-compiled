export class OBaseTablePaginator {
    constructor() {
        this._pageIndex = 0;
        this._pageSize = 10;
        this.showFirstLastButtons = true;
        this._pageIndex = 0;
        this._pageSizeOptions = [10, 25, 50, 100];
    }
    get pageLenght() {
        return this._pageSize;
    }
    set pageLenght(value) {
        this._pageSize = value;
    }
    get pageIndex() {
        return this._pageIndex;
    }
    set pageIndex(value) {
        this._pageIndex = value;
    }
    get pageSize() {
        return this._pageSize;
    }
    set pageSize(value) {
        const parsedValue = parseInt(`${value}`, 10);
        if (isNaN(parsedValue) || parsedValue < 0) {
            this._pageSize = this._pageSizeOptions[0];
        }
        else {
            this._pageSize = parsedValue;
        }
        const result = this.pageSizeOptions.find(option => option === this._pageSize);
        if (!result) {
            this._pageSizeOptions.push(this._pageSize);
            this._pageSizeOptions.sort((i, j) => i - j);
        }
    }
    get pageSizeOptions() {
        return this._pageSizeOptions;
    }
    set pageSizeOptions(value) {
        this._pageSizeOptions = value;
    }
    isShowingAllRows(selectedLength) {
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby1iYXNlLXRhYmxlLXBhZ2luYXRvci5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9leHRlbnNpb25zL2Zvb3Rlci9wYWdpbmF0b3Ivby1iYXNlLXRhYmxlLXBhZ2luYXRvci5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sbUJBQW1CO0lBTzlCO1FBTFUsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUN2QixjQUFTLEdBQVcsRUFBRSxDQUFDO1FBRWpDLHlCQUFvQixHQUFZLElBQUksQ0FBQztRQUduQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUFhO1FBQzFCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQWE7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxRQUFRLENBQUMsS0FBYTtRQUN4QixNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsR0FBRyxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM3QyxJQUFJLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLEdBQUcsQ0FBQyxFQUFFO1lBQ3pDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzNDO2FBQU07WUFDTCxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQztTQUM5QjtRQUNELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM5RSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDM0MsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUM3RDtJQUNILENBQUM7SUFFRCxJQUFJLGVBQWU7UUFDakIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksZUFBZSxDQUFDLEtBQWlCO1FBQ25DLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJQUVNLGdCQUFnQixDQUFDLGNBQWM7UUFHcEMsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPVGFibGVQYWdpbmF0b3IgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9pbnRlcmZhY2VzL28tdGFibGUtcGFnaW5hdG9yLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjbGFzcyBPQmFzZVRhYmxlUGFnaW5hdG9yIGltcGxlbWVudHMgT1RhYmxlUGFnaW5hdG9yIHtcblxuICBwcm90ZWN0ZWQgX3BhZ2VJbmRleDogbnVtYmVyID0gMDtcbiAgcHJvdGVjdGVkIF9wYWdlU2l6ZTogbnVtYmVyID0gMTA7XG4gIHByb3RlY3RlZCBfcGFnZVNpemVPcHRpb25zOiBBcnJheTxhbnk+O1xuICBzaG93Rmlyc3RMYXN0QnV0dG9uczogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fcGFnZUluZGV4ID0gMDtcbiAgICB0aGlzLl9wYWdlU2l6ZU9wdGlvbnMgPSBbMTAsIDI1LCA1MCwgMTAwXTtcbiAgfVxuXG4gIGdldCBwYWdlTGVuZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2VTaXplO1xuICB9XG5cbiAgc2V0IHBhZ2VMZW5naHQodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3BhZ2VTaXplID0gdmFsdWU7XG4gIH1cblxuICBnZXQgcGFnZUluZGV4KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2VJbmRleDtcbiAgfVxuXG4gIHNldCBwYWdlSW5kZXgodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3BhZ2VJbmRleCA9IHZhbHVlO1xuICB9XG5cbiAgZ2V0IHBhZ2VTaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2VTaXplO1xuICB9XG5cbiAgc2V0IHBhZ2VTaXplKHZhbHVlOiBudW1iZXIpIHtcbiAgICBjb25zdCBwYXJzZWRWYWx1ZSA9IHBhcnNlSW50KGAke3ZhbHVlfWAsIDEwKTtcbiAgICBpZiAoaXNOYU4ocGFyc2VkVmFsdWUpIHx8IHBhcnNlZFZhbHVlIDwgMCkge1xuICAgICAgdGhpcy5fcGFnZVNpemUgPSB0aGlzLl9wYWdlU2l6ZU9wdGlvbnNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3BhZ2VTaXplID0gcGFyc2VkVmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMucGFnZVNpemVPcHRpb25zLmZpbmQob3B0aW9uID0+IG9wdGlvbiA9PT0gdGhpcy5fcGFnZVNpemUpO1xuICAgIGlmICghcmVzdWx0KSB7XG4gICAgICB0aGlzLl9wYWdlU2l6ZU9wdGlvbnMucHVzaCh0aGlzLl9wYWdlU2l6ZSk7XG4gICAgICB0aGlzLl9wYWdlU2l6ZU9wdGlvbnMuc29ydCgoaTogbnVtYmVyLCBqOiBudW1iZXIpID0+IGkgLSBqKTtcbiAgICB9XG4gIH1cblxuICBnZXQgcGFnZVNpemVPcHRpb25zKCk6IEFycmF5PGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9wYWdlU2l6ZU9wdGlvbnM7XG4gIH1cblxuICBzZXQgcGFnZVNpemVPcHRpb25zKHZhbHVlOiBBcnJheTxhbnk+KSB7XG4gICAgdGhpcy5fcGFnZVNpemVPcHRpb25zID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgaXNTaG93aW5nQWxsUm93cyhzZWxlY3RlZExlbmd0aCk6IGJvb2xlYW4ge1xuICAgIC8vIHJldHVybiB0aGlzLl9wYWdlU2l6ZU9wdGlvbnMuaW5kZXhPZihzZWxlY3RlZExlbmd0aCkgPT09ICh0aGlzLl9wYWdlU2l6ZU9wdGlvbnMubGVuZ3RoIC0gMSk7XG4gICAgLy8gdGVtcG9yYWwgd2hpbGUgbm90IGhhdmluZyBhbiBvcHRpb24gZm9yIHNob3dpbmcgYWxsIHJlY29yZHMgaW4gcGFnaW5hdGVkIHRhYmxlc1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuIl19