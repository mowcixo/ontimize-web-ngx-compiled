const EMAIL_REGEXP = /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?/;
const DNI_PATTERN = '^(([0-9]{8})([-]?)([a-zA-Z]{1}))$';
const NIE_PATTERN = '^(([x-zX-Z]{1})([-]?)([0-9]{7})([-]?)([a-zA-Z]{1}))$';
const DNI_CHECK = 'TRWAGMYFPDXBNJZSQVHLCKET';
const NUMBERS = '0123456789';
export const TWELVE_HOUR_FORMAT_PATTERN = '^(([0-9]|([01]?[0-9])):([0-9]|([0-5][0-9])) *([AaPp][Mm])*)$';
export const TWENTY_FOUR_HOUR_FORMAT_PATTERN = '^([0-9]|([01]?[0-9]|2[0-3])):[0-9]|([0-5][0-9])$';
export class OValidators {
    static twelveHourFormatValidator(control) {
        const regExp = new RegExp(TWELVE_HOUR_FORMAT_PATTERN);
        if (control.value && typeof control.value === 'string' && !regExp.test(control.value)) {
            return { invalidFormatHour: true };
        }
        return {};
    }
    static twentyFourHourFormatValidator(control) {
        const regExp = new RegExp(TWENTY_FOUR_HOUR_FORMAT_PATTERN);
        if (control.value && typeof control.value === 'string' && !regExp.test(control.value)) {
            return { invalidFormatHour: true };
        }
        return {};
    }
    static emailValidator(control) {
        if (control.value && control.value.length > 0 && !EMAIL_REGEXP.test(control.value)) {
            return { invalidEmailAddress: true };
        }
        return {};
    }
    static nifValidator(control) {
        const newValue = control.value;
        const regExp = new RegExp(DNI_PATTERN + '|' + NIE_PATTERN);
        let valueWithoutDashes = '';
        for (const i in newValue) {
            if (newValue[i] !== '-') {
                valueWithoutDashes = valueWithoutDashes + newValue[i];
            }
        }
        if (valueWithoutDashes.length > 1) {
            const firstChar = valueWithoutDashes.charAt(0);
            if (NUMBERS.indexOf(firstChar) !== -1) {
                const number = valueWithoutDashes.substring(0, valueWithoutDashes.length - 1);
                const pos = parseInt(number, 10) % 23;
                const expectedLetter = DNI_CHECK.substring(pos, pos + 1);
                const letter = valueWithoutDashes.charAt(valueWithoutDashes.length - 1);
                const dniLetterError = (expectedLetter !== letter.toUpperCase());
                if (dniLetterError) {
                    return { invalidNIFLetter: true };
                }
                else {
                    if (!regExp.test(valueWithoutDashes)) {
                        return { invalidNIF: true };
                    }
                }
            }
            else {
                if (!regExp.test(valueWithoutDashes)) {
                    return { invalidNIF: true };
                }
            }
        }
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiby12YWxpZGF0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vb250aW1pemUtd2ViLW5neC8iLCJzb3VyY2VzIjpbImxpYi92YWxpZGF0b3JzL28tdmFsaWRhdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFlBQVksR0FBRywrSkFBK0osQ0FBQztBQUdyTCxNQUFNLFdBQVcsR0FBRyxtQ0FBbUMsQ0FBQztBQUN4RCxNQUFNLFdBQVcsR0FBRyxzREFBc0QsQ0FBQztBQUMzRSxNQUFNLFNBQVMsR0FBRywwQkFBMEIsQ0FBQztBQUM3QyxNQUFNLE9BQU8sR0FBRyxZQUFZLENBQUM7QUFDN0IsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsOERBQThELENBQUM7QUFDekcsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQUcsa0RBQWtELENBQUM7QUFFbEcsTUFBTSxPQUFPLFdBQVc7SUFLZixNQUFNLENBQUMseUJBQXlCLENBQUMsT0FBb0I7UUFDMUQsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUN0RCxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksT0FBTyxPQUFPLENBQUMsS0FBSyxLQUFLLFFBQVEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3JGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQztTQUNwQztRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUtNLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxPQUFvQjtRQUM5RCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQzNELElBQUksT0FBTyxDQUFDLEtBQUssSUFBSSxPQUFPLE9BQU8sQ0FBQyxLQUFLLEtBQUssUUFBUSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDckYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUFDO1NBQ3BDO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0lBS00sTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFvQjtRQUMvQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbEYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLElBQUksRUFBRSxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0lBS00sTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFvQjtRQUM3QyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQy9CLE1BQU0sTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsV0FBVyxDQUFDLENBQUM7UUFHM0QsSUFBSSxrQkFBa0IsR0FBRyxFQUFFLENBQUM7UUFDNUIsS0FBSyxNQUFNLENBQUMsSUFBSSxRQUFRLEVBQUU7WUFDeEIsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO2dCQUN2QixrQkFBa0IsR0FBRyxrQkFBa0IsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDdkQ7U0FDRjtRQUNELElBQUksa0JBQWtCLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNqQyxNQUFNLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0MsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUNyQyxNQUFNLE1BQU0sR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLGtCQUFrQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDOUUsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ3RDLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDekQsTUFBTSxNQUFNLEdBQUcsa0JBQWtCLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDeEUsTUFBTSxjQUFjLEdBQUcsQ0FBQyxjQUFjLEtBQUssTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7Z0JBQ2pFLElBQUksY0FBYyxFQUFFO29CQUNsQixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLENBQUM7aUJBQ25DO3FCQUFNO29CQUNMLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUU7d0JBQ3BDLE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7cUJBQzdCO2lCQUNGO2FBQ0Y7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRTtvQkFDcEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztpQkFDN0I7YUFDRjtTQUNGO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9ybUNvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmNvbnN0IEVNQUlMX1JFR0VYUCA9IC9bYS16QS1aMC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKD86XFwuW2EtekEtWjAtOSEjJCUmJyorLz0/Xl9ge3x9fi1dKykqQCg/OlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dKlthLXpBLVowLTldKT9cXC4pK1thLXpBLVowLTldKD86W2EtekEtWjAtOS1dKlthLXpBLVowLTldKT8vO1xuXG4vLyBOSUYgUmVndWxhciBFeHByZXNzaW9uc1xuY29uc3QgRE5JX1BBVFRFUk4gPSAnXigoWzAtOV17OH0pKFstXT8pKFthLXpBLVpdezF9KSkkJztcbmNvbnN0IE5JRV9QQVRURVJOID0gJ14oKFt4LXpYLVpdezF9KShbLV0/KShbMC05XXs3fSkoWy1dPykoW2EtekEtWl17MX0pKSQnO1xuY29uc3QgRE5JX0NIRUNLID0gJ1RSV0FHTVlGUERYQk5KWlNRVkhMQ0tFVCc7XG5jb25zdCBOVU1CRVJTID0gJzAxMjM0NTY3ODknO1xuZXhwb3J0IGNvbnN0IFRXRUxWRV9IT1VSX0ZPUk1BVF9QQVRURVJOID0gJ14oKFswLTldfChbMDFdP1swLTldKSk6KFswLTldfChbMC01XVswLTldKSkgKihbQWFQcF1bTW1dKSopJCc7XG5leHBvcnQgY29uc3QgVFdFTlRZX0ZPVVJfSE9VUl9GT1JNQVRfUEFUVEVSTiA9ICdeKFswLTldfChbMDFdP1swLTldfDJbMC0zXSkpOlswLTldfChbMC01XVswLTldKSQnO1xuXG5leHBvcnQgY2xhc3MgT1ZhbGlkYXRvcnMge1xuXG4gIC8qKlxuICAgKiBIb3VyIHZhbGlkYXRvciBoaDptbSBhbS9wbSBmb3JtYXRcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgdHdlbHZlSG91ckZvcm1hdFZhbGlkYXRvcihjb250cm9sOiBGb3JtQ29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMge1xuICAgIGNvbnN0IHJlZ0V4cCA9IG5ldyBSZWdFeHAoVFdFTFZFX0hPVVJfRk9STUFUX1BBVFRFUk4pO1xuICAgIGlmIChjb250cm9sLnZhbHVlICYmIHR5cGVvZiBjb250cm9sLnZhbHVlID09PSAnc3RyaW5nJyAmJiAhcmVnRXhwLnRlc3QoY29udHJvbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB7IGludmFsaWRGb3JtYXRIb3VyOiB0cnVlIH07XG4gICAgfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIb3VyIHZhbGlkYXRvciBISDptbSBmb3JtYXRcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgdHdlbnR5Rm91ckhvdXJGb3JtYXRWYWxpZGF0b3IoY29udHJvbDogRm9ybUNvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHtcbiAgICBjb25zdCByZWdFeHAgPSBuZXcgUmVnRXhwKFRXRU5UWV9GT1VSX0hPVVJfRk9STUFUX1BBVFRFUk4pO1xuICAgIGlmIChjb250cm9sLnZhbHVlICYmIHR5cGVvZiBjb250cm9sLnZhbHVlID09PSAnc3RyaW5nJyAmJiAhcmVnRXhwLnRlc3QoY29udHJvbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB7IGludmFsaWRGb3JtYXRIb3VyOiB0cnVlIH07XG4gICAgfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbWFpbCB2YWxpZGF0b3JcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgZW1haWxWYWxpZGF0b3IoY29udHJvbDogRm9ybUNvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHtcbiAgICBpZiAoY29udHJvbC52YWx1ZSAmJiBjb250cm9sLnZhbHVlLmxlbmd0aCA+IDAgJiYgIUVNQUlMX1JFR0VYUC50ZXN0KGNvbnRyb2wudmFsdWUpKSB7XG4gICAgICByZXR1cm4geyBpbnZhbGlkRW1haWxBZGRyZXNzOiB0cnVlIH07XG4gICAgfVxuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBOSUYgdmFsaWRhdG9yXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIG5pZlZhbGlkYXRvcihjb250cm9sOiBGb3JtQ29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMge1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gY29udHJvbC52YWx1ZTtcbiAgICBjb25zdCByZWdFeHAgPSBuZXcgUmVnRXhwKEROSV9QQVRURVJOICsgJ3wnICsgTklFX1BBVFRFUk4pO1xuXG4gICAgLy8gcmVtb3ZpbmcgZGFzaGVzXG4gICAgbGV0IHZhbHVlV2l0aG91dERhc2hlcyA9ICcnO1xuICAgIGZvciAoY29uc3QgaSBpbiBuZXdWYWx1ZSkge1xuICAgICAgaWYgKG5ld1ZhbHVlW2ldICE9PSAnLScpIHtcbiAgICAgICAgdmFsdWVXaXRob3V0RGFzaGVzID0gdmFsdWVXaXRob3V0RGFzaGVzICsgbmV3VmFsdWVbaV07XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh2YWx1ZVdpdGhvdXREYXNoZXMubGVuZ3RoID4gMSkge1xuICAgICAgY29uc3QgZmlyc3RDaGFyID0gdmFsdWVXaXRob3V0RGFzaGVzLmNoYXJBdCgwKTtcbiAgICAgIGlmIChOVU1CRVJTLmluZGV4T2YoZmlyc3RDaGFyKSAhPT0gLTEpIHtcbiAgICAgICAgY29uc3QgbnVtYmVyID0gdmFsdWVXaXRob3V0RGFzaGVzLnN1YnN0cmluZygwLCB2YWx1ZVdpdGhvdXREYXNoZXMubGVuZ3RoIC0gMSk7XG4gICAgICAgIGNvbnN0IHBvcyA9IHBhcnNlSW50KG51bWJlciwgMTApICUgMjM7XG4gICAgICAgIGNvbnN0IGV4cGVjdGVkTGV0dGVyID0gRE5JX0NIRUNLLnN1YnN0cmluZyhwb3MsIHBvcyArIDEpO1xuICAgICAgICBjb25zdCBsZXR0ZXIgPSB2YWx1ZVdpdGhvdXREYXNoZXMuY2hhckF0KHZhbHVlV2l0aG91dERhc2hlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgY29uc3QgZG5pTGV0dGVyRXJyb3IgPSAoZXhwZWN0ZWRMZXR0ZXIgIT09IGxldHRlci50b1VwcGVyQ2FzZSgpKTtcbiAgICAgICAgaWYgKGRuaUxldHRlckVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHsgaW52YWxpZE5JRkxldHRlcjogdHJ1ZSB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghcmVnRXhwLnRlc3QodmFsdWVXaXRob3V0RGFzaGVzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaW52YWxpZE5JRjogdHJ1ZSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCFyZWdFeHAudGVzdCh2YWx1ZVdpdGhvdXREYXNoZXMpKSB7XG4gICAgICAgICAgcmV0dXJuIHsgaW52YWxpZE5JRjogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxufVxuIl19