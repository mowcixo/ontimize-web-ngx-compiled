import * as tslib_1 from "tslib";
import { OTableCellRendererActionComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION, DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION } from './action/o-table-cell-renderer-action.component';
import { OTableCellRendererBooleanComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_BOOLEAN } from './boolean/o-table-cell-renderer-boolean.component';
import { OTableCellRendererCurrencyComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY } from './currency/o-table-cell-renderer-currency.component';
import { OTableCellRendererDateComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_DATE } from './date/o-table-cell-renderer-date.component';
import { OTableCellRendererImageComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_IMAGE } from './image/o-table-cell-renderer-image.component';
import { OTableCellRendererIntegerComponent } from './integer/o-table-cell-renderer-integer.component';
import { OTableCellRendererPercentageComponent } from './percentage/o-table-cell-renderer-percentage.component';
import { OTableCellRendererRealComponent } from './real/o-table-cell-renderer-real.component';
import { OTableCellRendererServiceComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE } from './service/o-table-cell-renderer-service.component';
import { OTableCellRendererTimeComponent } from './time/o-table-cell-renderer-time.component';
import { OTableCellRendererTranslateComponent, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE } from './translate/o-table-cell-renderer-translate.component';
export var O_TABLE_CELL_RENDERERS = [
    OTableCellRendererActionComponent,
    OTableCellRendererDateComponent,
    OTableCellRendererBooleanComponent,
    OTableCellRendererImageComponent,
    OTableCellRendererIntegerComponent,
    OTableCellRendererRealComponent,
    OTableCellRendererCurrencyComponent,
    OTableCellRendererPercentageComponent,
    OTableCellRendererServiceComponent,
    OTableCellRendererTranslateComponent,
    OTableCellRendererTimeComponent
];
export var O_TABLE_CELL_RENDERERS_INPUTS = tslib_1.__spread(DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_BOOLEAN, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_DATE, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_IMAGE, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE, DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE);
export var O_TABLE_CELL_RENDERERS_OUTPUTS = tslib_1.__spread(DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION);
export var renderersMapping = {
    action: OTableCellRendererActionComponent,
    boolean: OTableCellRendererBooleanComponent,
    currency: OTableCellRendererCurrencyComponent,
    date: OTableCellRendererDateComponent,
    image: OTableCellRendererImageComponent,
    integer: OTableCellRendererIntegerComponent,
    percentage: OTableCellRendererPercentageComponent,
    real: OTableCellRendererRealComponent,
    service: OTableCellRendererServiceComponent,
    translate: OTableCellRendererTranslateComponent,
    time: OTableCellRendererTimeComponent
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1yZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL29udGltaXplLXdlYi1uZ3gvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9jb2x1bW4vY2VsbC1yZW5kZXJlci9jZWxsLXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsMkNBQTJDLEVBQUUsNENBQTRDLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMvTCxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsNENBQTRDLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUNySixPQUFPLEVBQUUsbUNBQW1DLEVBQUUsNkNBQTZDLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUN6SixPQUFPLEVBQUUsK0JBQStCLEVBQUUseUNBQXlDLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN6SSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsMENBQTBDLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUM3SSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUN2RyxPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUNoSCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM5RixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsNENBQTRDLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUNySixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM5RixPQUFPLEVBQUUsb0NBQW9DLEVBQUUsOENBQThDLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUU3SixNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRztJQUNwQyxpQ0FBaUM7SUFDakMsK0JBQStCO0lBQy9CLGtDQUFrQztJQUNsQyxnQ0FBZ0M7SUFDaEMsa0NBQWtDO0lBQ2xDLCtCQUErQjtJQUMvQixtQ0FBbUM7SUFDbkMscUNBQXFDO0lBQ3JDLGtDQUFrQztJQUNsQyxvQ0FBb0M7SUFDcEMsK0JBQStCO0NBQ2hDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSw2QkFBNkIsb0JBQ3JDLDRDQUE0QyxFQUM1Qyw2Q0FBNkMsRUFDN0MseUNBQXlDLEVBQ3pDLDBDQUEwQyxFQUMxQywyQ0FBMkMsRUFDM0MsNENBQTRDLEVBQzVDLDhDQUE4QyxDQUNsRCxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sOEJBQThCLG9CQUN0Qyw0Q0FBNEMsQ0FDaEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUFHO0lBQzlCLE1BQU0sRUFBRSxpQ0FBaUM7SUFDekMsT0FBTyxFQUFFLGtDQUFrQztJQUMzQyxRQUFRLEVBQUUsbUNBQW1DO0lBQzdDLElBQUksRUFBRSwrQkFBK0I7SUFDckMsS0FBSyxFQUFFLGdDQUFnQztJQUN2QyxPQUFPLEVBQUUsa0NBQWtDO0lBQzNDLFVBQVUsRUFBRSxxQ0FBcUM7SUFDakQsSUFBSSxFQUFFLCtCQUErQjtJQUNyQyxPQUFPLEVBQUUsa0NBQWtDO0lBQzNDLFNBQVMsRUFBRSxvQ0FBb0M7SUFDL0MsSUFBSSxFQUFFLCtCQUErQjtDQUN0QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT1RhYmxlQ2VsbFJlbmRlcmVyQWN0aW9uQ29tcG9uZW50LCBERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQUNUSU9OLCBERUZBVUxUX09VVFBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0FDVElPTiB9IGZyb20gJy4vYWN0aW9uL28tdGFibGUtY2VsbC1yZW5kZXJlci1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlckJvb2xlYW5Db21wb25lbnQsIERFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9CT09MRUFOIH0gZnJvbSAnLi9ib29sZWFuL28tdGFibGUtY2VsbC1yZW5kZXJlci1ib29sZWFuLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPVGFibGVDZWxsUmVuZGVyZXJDdXJyZW5jeUNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0NVUlJFTkNZIH0gZnJvbSAnLi9jdXJyZW5jeS9vLXRhYmxlLWNlbGwtcmVuZGVyZXItY3VycmVuY3kuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlckRhdGVDb21wb25lbnQsIERFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9EQVRFIH0gZnJvbSAnLi9kYXRlL28tdGFibGUtY2VsbC1yZW5kZXJlci1kYXRlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPVGFibGVDZWxsUmVuZGVyZXJJbWFnZUNvbXBvbmVudCwgREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0lNQUdFIH0gZnJvbSAnLi9pbWFnZS9vLXRhYmxlLWNlbGwtcmVuZGVyZXItaW1hZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlckludGVnZXJDb21wb25lbnQgfSBmcm9tICcuL2ludGVnZXIvby10YWJsZS1jZWxsLXJlbmRlcmVyLWludGVnZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlclBlcmNlbnRhZ2VDb21wb25lbnQgfSBmcm9tICcuL3BlcmNlbnRhZ2Uvby10YWJsZS1jZWxsLXJlbmRlcmVyLXBlcmNlbnRhZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlclJlYWxDb21wb25lbnQgfSBmcm9tICcuL3JlYWwvby10YWJsZS1jZWxsLXJlbmRlcmVyLXJlYWwuY29tcG9uZW50JztcbmltcG9ydCB7IE9UYWJsZUNlbGxSZW5kZXJlclNlcnZpY2VDb21wb25lbnQsIERFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9TRVJWSUNFIH0gZnJvbSAnLi9zZXJ2aWNlL28tdGFibGUtY2VsbC1yZW5kZXJlci1zZXJ2aWNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPVGFibGVDZWxsUmVuZGVyZXJUaW1lQ29tcG9uZW50IH0gZnJvbSAnLi90aW1lL28tdGFibGUtY2VsbC1yZW5kZXJlci10aW1lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPVGFibGVDZWxsUmVuZGVyZXJUcmFuc2xhdGVDb21wb25lbnQsIERFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9UUkFOU0xBVEUgfSBmcm9tICcuL3RyYW5zbGF0ZS9vLXRhYmxlLWNlbGwtcmVuZGVyZXItdHJhbnNsYXRlLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBPX1RBQkxFX0NFTExfUkVOREVSRVJTID0gW1xuICBPVGFibGVDZWxsUmVuZGVyZXJBY3Rpb25Db21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlckRhdGVDb21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlckJvb2xlYW5Db21wb25lbnQsXG4gIE9UYWJsZUNlbGxSZW5kZXJlckltYWdlQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJJbnRlZ2VyQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJSZWFsQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJDdXJyZW5jeUNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVyUGVyY2VudGFnZUNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVyU2VydmljZUNvbXBvbmVudCxcbiAgT1RhYmxlQ2VsbFJlbmRlcmVyVHJhbnNsYXRlQ29tcG9uZW50LFxuICBPVGFibGVDZWxsUmVuZGVyZXJUaW1lQ29tcG9uZW50XG5dO1xuXG5leHBvcnQgY29uc3QgT19UQUJMRV9DRUxMX1JFTkRFUkVSU19JTlBVVFMgPSBbXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9CT09MRUFOLFxuICAuLi5ERUZBVUxUX0lOUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQ1VSUkVOQ1ksIC8vIGluY2x1ZGVzIEludGVnZXIgYW5kIFJlYWxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0RBVEUsXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9JTUFHRSxcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX0FDVElPTixcbiAgLi4uREVGQVVMVF9JTlBVVFNfT19UQUJMRV9DRUxMX1JFTkRFUkVSX1NFUlZJQ0UsXG4gIC4uLkRFRkFVTFRfSU5QVVRTX09fVEFCTEVfQ0VMTF9SRU5ERVJFUl9UUkFOU0xBVEVcbl07XG5cbmV4cG9ydCBjb25zdCBPX1RBQkxFX0NFTExfUkVOREVSRVJTX09VVFBVVFMgPSBbXG4gIC4uLkRFRkFVTFRfT1VUUFVUU19PX1RBQkxFX0NFTExfUkVOREVSRVJfQUNUSU9OXG5dO1xuXG5leHBvcnQgY29uc3QgcmVuZGVyZXJzTWFwcGluZyA9IHtcbiAgYWN0aW9uOiBPVGFibGVDZWxsUmVuZGVyZXJBY3Rpb25Db21wb25lbnQsXG4gIGJvb2xlYW46IE9UYWJsZUNlbGxSZW5kZXJlckJvb2xlYW5Db21wb25lbnQsXG4gIGN1cnJlbmN5OiBPVGFibGVDZWxsUmVuZGVyZXJDdXJyZW5jeUNvbXBvbmVudCxcbiAgZGF0ZTogT1RhYmxlQ2VsbFJlbmRlcmVyRGF0ZUNvbXBvbmVudCxcbiAgaW1hZ2U6IE9UYWJsZUNlbGxSZW5kZXJlckltYWdlQ29tcG9uZW50LFxuICBpbnRlZ2VyOiBPVGFibGVDZWxsUmVuZGVyZXJJbnRlZ2VyQ29tcG9uZW50LFxuICBwZXJjZW50YWdlOiBPVGFibGVDZWxsUmVuZGVyZXJQZXJjZW50YWdlQ29tcG9uZW50LFxuICByZWFsOiBPVGFibGVDZWxsUmVuZGVyZXJSZWFsQ29tcG9uZW50LFxuICBzZXJ2aWNlOiBPVGFibGVDZWxsUmVuZGVyZXJTZXJ2aWNlQ29tcG9uZW50LFxuICB0cmFuc2xhdGU6IE9UYWJsZUNlbGxSZW5kZXJlclRyYW5zbGF0ZUNvbXBvbmVudCxcbiAgdGltZTogT1RhYmxlQ2VsbFJlbmRlcmVyVGltZUNvbXBvbmVudFxufTtcbiJdfQ==